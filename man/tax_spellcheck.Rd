% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tax_spellcheck.R
\name{tax_spellcheck}
\alias{tax_spellcheck}
\title{tax_spellcheck}
\usage{
tax_spellcheck(
  x,
  names,
  groups = NULL,
  sim = 0.2,
  srt = 1,
  end = 0,
  pref = NULL,
  suff = NULL,
  verbose = FALSE
)
}
\arguments{
\item{x}{\code{dataframe}. This must have column names and contain
column with taxon names, and optionally a further column denoting the
groups within which taxon names will be checked against one another.}

\item{names}{\code{character}. The column header of the taxon names field
in \code{x}.}

\item{groups}{\code{character}. The column header of the higher taxonomic
assignments field in \code{x}. If \code{NULL} (default), name comparison will be conducted
within alphabetical groups.}

\item{sim}{\code{numeric}. The percentage dissimilarity, above which potential
synonyms be filtered out. Percentage is expressed between 0 and 1.}

\item{srt}{\code{numeric}. The number of matching characters at the
beginnings of two potential synonyms, below which the match will be
discarded. By default 1, i.e. the first letters must match.}

\item{end}{\code{numeric}. The number of matching characters at the endings
of two potential synonyms, below which the match will be discarded. By
default 0, i.e. no penalisation.}

\item{pref}{\code{character}. If not \code{NULL}, a vector of prefixes
which may result in spuriously high similarities. Synonyms will be filtered
out if only one or the other bears a given prefix.}

\item{suff}{\code{character}. If not \code{NULL}, a vector of suffixes
which may result in spuriously high similarities. Synonyms will be filtered
out if only one or the other bears a given suffix.}

\item{verbose}{\code{logical}. Should the results of the non-alpha character
check should be reported to the user. If \code{TRUE}, the result will only be
reported if such characters are detected in the taxon names.}
}
\value{
\code{dataframe}. The output contains the more common flagged synonym
in the first column, the less common synonym in the middle column and the
group in which they occur in in the final column (this may be the
alphabetical) default. If no matches were found which exceeded the filtering
parameters, \code{NULL} is returned instead.
}
\description{
A function for checking for spelling variations of the same
taxon name. These are checked for within higher taxonomic
groups or if higher taxonomy is not provided (the default
assumption), within alphabetical groups.
}
\details{
Where higher taxonomy is provided, but some entries are
missing, comparisons will be made within alphabetical groups. The
function also silently performs a check for non-letter characters
which are not expected to be present in correctly-formatted
taxon names. This detection may be made verbose by the user.

Comparison is first performed using the Jaro string similarity
metric which can be easily interpreted as percentage dissimilarity,
allowing low similarity pairs to be filtered before the result is
returned. Matches can then been filtered out if they do not share a
given number of starting and/or ending letters. Penalisation by
starting letters is analogous to Jaro-Winkler distance, but purely
Jaro distance is used instead as common Latin or Greek prefixes and
suffixes which can result in spuriously high string similarities
can also be supplied. User-supplied prefixes and suffixes will cause
higher similarity matches which do not share the same prefix or
suffix to be filtered from the results (see example). Note that this
creates the assumption that spelling variations are not present among
the prefixe and suffixes, which is not always the case.

As all string distance metrics rely on approximate string matching,
different metrics can produce different results. This function uses
Jaro similarity as it was designed with short, typed strings in mind,
but good practice should include comparisons using multiple metrics.
A more sophisticated version of this spell check function is available
in the \code{fossilbrush} R package on CRAN, as part of a multistage cleaning
routine designed for taxonomic occurrence data.
}
\section{Developer(s)}{

Joseph T. Flannery-Sutherland
}

\section{Reviewer(s)}{

Name(s)
}

\examples{
\dontrun{
# load occurrence data
brachios <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv",
                     "?base_name=Brachiopoda",
                     "&interval=Cambrian,Silurian",
                     "&show=class"))

# define prefixes and suffixes
b_pref <- c("Neo", "Micro", "Schizo", "Stropho", "Ortho")
b_suff <- c("spirifer", "rhynchus", "strophia", "treta", "thyris", "orthis",
            "ina", "ella", "trypa")

# run function
synon <- tax_spellcheck(brachios, names = "genus", groups = "family",
                        pref = b_pref, suff = b_suff)

}
}
