% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tax_range_strat.R
\name{tax_range_strat}
\alias{tax_range_strat}
\title{Generate a stratigraphic section plot}
\usage{
tax_range_strat(
  occdf,
  name = "genus",
  level = "bed",
  certainty = NULL,
  by = "FAD",
  plot_args = list(xlab = "", ylab = "Bed number"),
  x_args = list(font = 3, las = 2),
  y_args = list()
)
}
\arguments{
\item{occdf}{\code{dataframe}. A dataframe of fossil occurrences containing
at least two columns: names of taxa, and their stratigraphic position (see
\code{name} and \code{level} arguments).}

\item{name}{\code{character}. The name of the column you wish to be treated
as the input names, e.g. "genus" (default).}

\item{level}{\code{character}. The name of the column you wish to be treated
as the stratigraphic levels associated with each occurrence, e.g. "bed"
(default) or "height". Stratigraphic levels must be \code{numeric}.}

\item{certainty}{\code{character}. The name of the column you wish to be
treated as the information on whether an identification is certain (1) or
uncertain (0). By default (\code{certainty = NULL}), no column name is
provided, and all occurrences are assumed to be certain. In the plot,
certain occurrences will be plotted with a black circle and joined with
solid lines, while uncertain occurrences will be plotted with a white
circle and joined with dashed lines.}

\item{by}{\code{character}. How should the output be sorted? Either: "FAD"
(first appearance; default), "LAD" (last appearance), or "name"
(alphabetically by taxon names).}

\item{plot_args}{A list of optional arguments that are passed directly to
\code{\link[graphics:plot.default]{graphics::plot()}}. Useful arguments include \code{xlab} (the x-axis label),
\code{ylab} (the y-axis label, default is "Bed number"), \code{main} (the plot
title), \code{xlim} (the x-axis limits), and \code{ylim} (the y-axis limits). The
\code{axes} and \code{type} arguments are not supported and will be overridden.}

\item{x_args}{A list of optional arguments that are passed directly to
\code{\link[=axis]{axis()}} when generating the x-axis. Useful arguments include \code{font} (e.g.,
\code{3} is italic) and \code{las} (label orientation).}

\item{y_args}{A list of optional arguments that are passed directly to
\code{\link[=axis]{axis()}} when generating the y-axis. Useful arguments include \code{font} (e.g.,
\code{3} is italic) and \code{las} (label orientation).}
}
\value{
Invisibly returns a data.frame of the calculated taxonomic
stratigraphic ranges.

The function is usually used for its side effect, which is to create a plot
showing the stratigraphic ranges of taxa in a section, with levels at which
the taxon was sampled indicated with a point.
}
\description{
A function to plot the stratigraphic ranges of fossil taxa from occurrence
data.
}
\section{Developer(s)}{
 Bethany Allen, William Gearty & Alexander Dunhill
}

\section{Reviewer(s)}{
 William Gearty & Lewis A. Jones
}

\examples{
# Load tetrapod dataset
data(tetrapods)
# Sample tetrapod occurrences
tetrapod_names <- tetrapods$accepted_name[1:50]
# Simulate bed numbers
beds_sampled <- sample.int(n = 10, size = 50, replace = TRUE)
# Simulate certainty values
certainty_sampled <- sample(x = 0:1, size = 50, replace = TRUE)
# Combine into data frame
occdf <- data.frame(taxon = tetrapod_names,
                    bed = beds_sampled,
                    certainty = certainty_sampled)
# Plot stratigraphic ranges
par(mar = c(12, 5, 2, 2))
tax_range_strat(occdf, name = "taxon")
tax_range_strat(occdf, name = "taxon", certainty = "certainty",
                plot_args = list(ylab = "Stratigraphic height (m)"))
# Plot stratigraphic ranges with more labelling
tax_range_strat(occdf, name = "taxon", certainty = "certainty", by = "name",
                plot_args = list(main = "Section A",
                                 ylab = "Stratigraphic height (m)"))
eras_custom <- data.frame(name = c("Mesozoic", "Cenozoic"),
                          max_age = c(0.5, 3.5),
                          min_age = c(3.5, 10.5),
                          color = c("#67C5CA", "#F2F91D"))
axis_geo(side = 4, intervals = eras_custom, tick_labels = FALSE)

}
