% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tax_check.R
\name{tax_check}
\alias{tax_check}
\title{tax_check}
\usage{
tax_check(
  x,
  names,
  groups = NULL,
  sim = 90,
  start = 1,
  pref = NULL,
  suff = NULL,
  verbose = TRUE
)
}
\arguments{
\item{x}{\code{dataframe}. A data.frame with named columns (e.g., 'species',
'genus', etc.). This must contain taxon names and optionally a further
column denoting the groups within which taxon names will be checked against
one another (e.g., 'family', 'order', etc.). NA values or empty strings in
the name and group columns (i.e., '' and ' ') will be ignored.}

\item{names}{\code{character}. The column name of the taxon names you wish
to check (e.g., 'genus').}

\item{groups}{\code{character}. The column name of the higher taxonomic
assignments in \code{x} you wish to group by. If \code{NULL} (default), name
comparison will be conducted within alphabetical groups.}

\item{sim}{\code{numeric}. The percentage similarity threshold. Potential
synonyms above this threshold are reported.}

\item{start}{\code{numeric}. The number of matching characters at the
beginnings of two potential synonyms, below which the match will be
discarded. By default this value is set to 1 (i.e., the first letters must
match).}

\item{pref}{\code{character}. A vector of prefixes which may result in
spuriously high similarities. Synonyms will be filtered out if only one or
the other bears a given prefix. The default is \code{NULL}.}

\item{suff}{\code{character}. A vector of suffixes which help distinguish
otherwise similar taxon names. Synonyms will be filtered out if only one or
the other bears a given suffix, The default is \code{NULL}.}

\item{verbose}{\code{logical}. Should the results of the non-letter
character check be reported to the user? If \code{TRUE}, the result will only be
reported if such characters are detected in the taxon names.}
}
\value{
If verbose = \verb{TRUE' (default), a \code{list} with two elements. The first element in the list (synonyms) is a data.frame with each row reporting a pair of synonyms. The first column 'group' contains the higher group in which they occur (this may be the alphabetical groupings default). The second column 'greater' contains the most common synonym in each pair. The third column 'lesser' contains the least common synonym in each pair. The third and fourth columns (freq_1, freq_2) contain the respective frequencies of each synonym in a pair. If no matches were found for the filtering parameters, this element is }NULL\verb{instead. The second element (non_letter) is a vector of taxon names which contain non-letter characters, or}NULL\verb{if none were detected. If verbose =}FALSE\verb{, a \code{data.frame} as described above, or }NULL` if no matches were found.
}
\description{
A function for checking for potential spelling variations of the same
taxon. Spelling variations are checked within alphabetical groups (default),
or within higher taxonomic groups, if provided.
}
\details{
When higher taxonomy is provided, but some entries are missing,
comparisons will still be made within alphabetical groups of taxa which lack
higher taxonomic affiliations. The function also performs a check for non-
letter characters which are not expected to be present in correctly-
formatted taxon names. This detection may be made available to the user via
the \code{verbose} argument. Comparison is first performed using the Jaro string
dissimilarity with the \code{stringdistmatrix} function from the \code{stringdist}
package. The Jaro metric can be easily interpreted as a percentage
similarity, converted as (1 - Jaro dissimilarity). Low similarity pairs are
discarded, and matches can also be filtered out if they do not share a given
number of starting letters. The Jaro threshold is set to 90\% similarity by
default, but synonyms may still slip through at lower similarity thresholds.

Frequent re-use of Latin or Greek prefixes can induce high similarity
between taxon names, e.g., 'Proto' and Protoro' between 'Protosuchus' and
'Protorosaurus'. Conversely, suffixes are often used to differentiate taxon
names which share a common stem, e.g., 'is' and 'ina' separate
'Gelidorthis' and 'Gelidorthina'. As such, vectors of prefixes and suffixes
can also be supplied and matches will only be discarded if two potential
synonyms do not share the same prefix or suffix, even if their similarity
exceeds the Jaro filtering threshold. Prefixes and suffixes may have no
effect if this threshold is very high, but can be useful for large data sets
where prefixes and name stems are prevalent, for example brachiopods.

As all string distance metrics rely on approximate string matching,
different metrics can produce different results. This function uses Jaro
distance as it was designed with short, typed strings in mind, but good
practice should include comparisons using multiple metrics, and ultimately
specific taxonomic vetting where possible. A more complete implementation
and workflow for cleaning taxonomic occurrence data is available in the
\code{fossilbrush} R package on CRAN.
}
\section{Reference}{

M. P. J. van der Loo (2014). The stringdist package for approximate string
matching. The R Journal 6, 111-122.
}

\section{Developer(s)}{

Joseph T. Flannery-Sutherland
}

\section{Reviewer(s)}{

Lewis A. Jones & Killian Eichenseer
}

\examples{
\dontrun{
# load occurrence data
data("tetrapods")

# define prefixes and suffixes
b_pref <- c("Neo", "Proto")
b_suff <- c("saurus", "suchus")

# run function with a slightly more stringent matching threshold
synon <- tax_check(tetrapods, names = "genus", groups = "family",
sim = 90, pref = b_pref, suff = b_suff)

}
}
