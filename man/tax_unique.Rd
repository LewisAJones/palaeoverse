% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tax_unique.R
\name{tax_unique}
\alias{tax_unique}
\title{Filter occurrences to unique taxa}
\usage{
tax_unique(
  occdf = NULL,
  binomial = NULL,
  species = NULL,
  genus = NULL,
  family = NULL,
  order = NULL,
  class = NULL,
  names = NULL,
  resolution = "species"
)
}
\arguments{
\item{occdf}{\code{dataframe}. A dataframe containing information on the
occurrences or taxa to filter.}

\item{binomial}{\code{character}. The name of the column in the dataframe
containing the genus and species names of the occurrences, either in the
form "genus species" or "genus_species".}

\item{species}{\code{character}. The name of the column in the dataframe
containing the species-level identifications.}

\item{genus}{\code{character}. The name of the column in the data frame
containing the genus-level identifications.}

\item{family}{\code{character}. The name of the column in the data frame
containing the family-level identifications.}

\item{order}{\code{character}. The name of the column in the data frame
containing the order-level identifications.}

\item{class}{\code{character}. The name of the column in the data frame
containing the class-level identifications.}

\item{names}{\code{character}. The name of the column in the data frame
containing the taxonomic names at mixed taxonomic levels; the data column
"accepted_names" in a Paleobiology Database download is of this type.}

\item{resolution}{\code{character}. The taxonomic resolution at which to
identify unique occurrences, either species (the default) or genus.}
}
\value{
A \code{dataframe} of taxa, with each row corresponding to a unique
"species" or "genus" in the dataset (depending on the chosen resolution).
The dataframe will include the taxonomic information provided into the
function, as well as a column providing the 'unique' names of each taxon.
}
\description{
A function to filter a list of taxonomic occurrences to unique taxa of a
predefined resolution.
}
\details{
In many cases palaeobiologists count unique taxa by retaining only
unique occurrences identified to the given taxonomic resolution, however
here we also retain occurrences identified to a coarser resolution which are
not already represented within the dataset.
If we take the following set of occurrences:
Albertosaurus sarcophagus
Ankylosaurus sp.
Aves indet.
Ceratopsidae indet.
Hadrosauridae indet.
Ornithominus sp.
Tyrannosaurus rex
then a filter for species-level identifications will reduce the species
diversity to two. However, none of these clades are nested within another, so
each of the indeterminately identified occurrences represents at least one
species not already represented in the dataset. This function is designed to
deal with such taxonomic data, and would retain all seven 'species' in this
dataset.
Taxonomic information is supplied within a dataframe, in which columns
provide identifications at different taxonomic levels. Occurrence
data can be filtered to retain either unique species or unique genera. If a
species-level filter is desired, the minimum input is for either 'binomial',
'species' and 'genus', or 'names' and 'genus' columns to be entered, as well
as a 'family' column. In a standard Paleobiology Database dataframe, species
information is only captured in the 'accepted_name' column, so a species-
level filter should use 'genus = 'genus'' and 'names = 'accepted_name''
arguments.If a genus-level filter is desired, the minimum input is for
either 'binomial' or 'genus' columns to be entered, as well as a 'family'
column.
Missing data should be indicated with NAs, although the function can handle
the e.g. "NO_FAMILY_SPECIFIED" labels within Paleobiology Database datasets.
The function matches taxonomic names at increasingly higher taxonomic levels,
so homonyms may be falsely filtered out.
}
\section{Developer(s)}{

Bethany Allen
}

\section{Reviewer(s)}{

Lewis A. Jones and William Gearty
}

\examples{
#Retain unique species
tax_unique(occdf = tetrapods, genus = "genus", family = "family", order =
"order", class = "class", names = "accepted_name")

#Retain unique genera
tax_unique(occdf = tetrapods, genus = "genus", family = "family", order =
"order", class = "class", resolution = "genus")

#Create dataframe from lists
occdf <- data.frame(c("rex", "aegyptiacus", NA), c("Tyrannosaurus",
"Spinosaurus", NA), c("Tyrannosauridae", "Spinosauridae", "Diplodocidae"))
colnames(occdf) <- c("species", "genus", "family")
tax_unique(occdf = occdf, species = "species", genus = "genus", family =
"family")

}
